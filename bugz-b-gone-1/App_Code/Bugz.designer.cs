#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Database")]
public partial class BugzDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertAssignee(Assignee instance);
  partial void UpdateAssignee(Assignee instance);
  partial void DeleteAssignee(Assignee instance);
  partial void InsertUsertype(Usertype instance);
  partial void UpdateUsertype(Usertype instance);
  partial void DeleteUsertype(Usertype instance);
  partial void InsertBug(Bug instance);
  partial void UpdateBug(Bug instance);
  partial void DeleteBug(Bug instance);
  partial void InsertBugstatus(Bugstatus instance);
  partial void UpdateBugstatus(Bugstatus instance);
  partial void DeleteBugstatus(Bugstatus instance);
  partial void InsertPriority(Priority instance);
  partial void UpdatePriority(Priority instance);
  partial void DeletePriority(Priority instance);
  partial void InsertProject(Project instance);
  partial void UpdateProject(Project instance);
  partial void DeleteProject(Project instance);
  partial void InsertReaction(Reaction instance);
  partial void UpdateReaction(Reaction instance);
  partial void DeleteReaction(Reaction instance);
  partial void InsertUser(User instance);
  partial void UpdateUser(User instance);
  partial void DeleteUser(User instance);
  partial void InsertUsersOnProject(UsersOnProject instance);
  partial void UpdateUsersOnProject(UsersOnProject instance);
  partial void DeleteUsersOnProject(UsersOnProject instance);
  #endregion
	
	public BugzDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DatabaseConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public BugzDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public BugzDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public BugzDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public BugzDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<Assignee> Assignees
	{
		get
		{
			return this.GetTable<Assignee>();
		}
	}
	
	public System.Data.Linq.Table<Usertype> Usertypes
	{
		get
		{
			return this.GetTable<Usertype>();
		}
	}
	
	public System.Data.Linq.Table<Bug> Bugs
	{
		get
		{
			return this.GetTable<Bug>();
		}
	}
	
	public System.Data.Linq.Table<Bugstatus> Bugstatus
	{
		get
		{
			return this.GetTable<Bugstatus>();
		}
	}
	
	public System.Data.Linq.Table<Priority> Priorities
	{
		get
		{
			return this.GetTable<Priority>();
		}
	}
	
	public System.Data.Linq.Table<Project> Projects
	{
		get
		{
			return this.GetTable<Project>();
		}
	}
	
	public System.Data.Linq.Table<Reaction> Reactions
	{
		get
		{
			return this.GetTable<Reaction>();
		}
	}
	
	public System.Data.Linq.Table<User> Users
	{
		get
		{
			return this.GetTable<User>();
		}
	}
	
	public System.Data.Linq.Table<UsersOnProject> UsersOnProjects
	{
		get
		{
			return this.GetTable<UsersOnProject>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Assignees")]
public partial class Assignee : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _pk_assignees_id;
	
	private System.Nullable<int> _fk_user;
	
	private System.Nullable<int> _fk_bug;
	
	private EntityRef<Bug> _Bug;
	
	private EntityRef<User> _User;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onpk_assignees_idChanging(int value);
    partial void Onpk_assignees_idChanged();
    partial void Onfk_userChanging(System.Nullable<int> value);
    partial void Onfk_userChanged();
    partial void Onfk_bugChanging(System.Nullable<int> value);
    partial void Onfk_bugChanged();
    #endregion
	
	public Assignee()
	{
		this._Bug = default(EntityRef<Bug>);
		this._User = default(EntityRef<User>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pk_assignees_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int pk_assignees_id
	{
		get
		{
			return this._pk_assignees_id;
		}
		set
		{
			if ((this._pk_assignees_id != value))
			{
				this.Onpk_assignees_idChanging(value);
				this.SendPropertyChanging();
				this._pk_assignees_id = value;
				this.SendPropertyChanged("pk_assignees_id");
				this.Onpk_assignees_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fk_user", DbType="Int")]
	public System.Nullable<int> fk_user
	{
		get
		{
			return this._fk_user;
		}
		set
		{
			if ((this._fk_user != value))
			{
				if (this._User.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onfk_userChanging(value);
				this.SendPropertyChanging();
				this._fk_user = value;
				this.SendPropertyChanged("fk_user");
				this.Onfk_userChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fk_bug", DbType="Int")]
	public System.Nullable<int> fk_bug
	{
		get
		{
			return this._fk_bug;
		}
		set
		{
			if ((this._fk_bug != value))
			{
				if (this._Bug.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onfk_bugChanging(value);
				this.SendPropertyChanging();
				this._fk_bug = value;
				this.SendPropertyChanged("fk_bug");
				this.Onfk_bugChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bug_Assignee", Storage="_Bug", ThisKey="fk_bug", OtherKey="pk_bugs_id", IsForeignKey=true)]
	public Bug Bug
	{
		get
		{
			return this._Bug.Entity;
		}
		set
		{
			Bug previousValue = this._Bug.Entity;
			if (((previousValue != value) 
						|| (this._Bug.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Bug.Entity = null;
					previousValue.Assignees.Remove(this);
				}
				this._Bug.Entity = value;
				if ((value != null))
				{
					value.Assignees.Add(this);
					this._fk_bug = value.pk_bugs_id;
				}
				else
				{
					this._fk_bug = default(Nullable<int>);
				}
				this.SendPropertyChanged("Bug");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Assignee", Storage="_User", ThisKey="fk_user", OtherKey="pk_users_id", IsForeignKey=true)]
	public User User
	{
		get
		{
			return this._User.Entity;
		}
		set
		{
			User previousValue = this._User.Entity;
			if (((previousValue != value) 
						|| (this._User.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._User.Entity = null;
					previousValue.Assignees.Remove(this);
				}
				this._User.Entity = value;
				if ((value != null))
				{
					value.Assignees.Add(this);
					this._fk_user = value.pk_users_id;
				}
				else
				{
					this._fk_user = default(Nullable<int>);
				}
				this.SendPropertyChanged("User");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Usertype")]
public partial class Usertype : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _pk_usertype_id;
	
	private string _usertype_name;
	
	private EntitySet<User> _Users;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onpk_usertype_idChanging(int value);
    partial void Onpk_usertype_idChanged();
    partial void Onusertype_nameChanging(string value);
    partial void Onusertype_nameChanged();
    #endregion
	
	public Usertype()
	{
		this._Users = new EntitySet<User>(new Action<User>(this.attach_Users), new Action<User>(this.detach_Users));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pk_usertype_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int pk_usertype_id
	{
		get
		{
			return this._pk_usertype_id;
		}
		set
		{
			if ((this._pk_usertype_id != value))
			{
				this.Onpk_usertype_idChanging(value);
				this.SendPropertyChanging();
				this._pk_usertype_id = value;
				this.SendPropertyChanged("pk_usertype_id");
				this.Onpk_usertype_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_usertype_name", DbType="NVarChar(50)")]
	public string usertype_name
	{
		get
		{
			return this._usertype_name;
		}
		set
		{
			if ((this._usertype_name != value))
			{
				this.Onusertype_nameChanging(value);
				this.SendPropertyChanging();
				this._usertype_name = value;
				this.SendPropertyChanged("usertype_name");
				this.Onusertype_nameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usertype_User", Storage="_Users", ThisKey="pk_usertype_id", OtherKey="fk_usertype")]
	public EntitySet<User> Users
	{
		get
		{
			return this._Users;
		}
		set
		{
			this._Users.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Users(User entity)
	{
		this.SendPropertyChanging();
		entity.Usertype = this;
	}
	
	private void detach_Users(User entity)
	{
		this.SendPropertyChanging();
		entity.Usertype = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bugs")]
public partial class Bug : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _pk_bugs_id;
	
	private string _title;
	
	private string _description;
	
	private System.Nullable<System.DateTime> _date;
	
	private System.Nullable<int> _fk_project;
	
	private System.Nullable<int> _fk_creator;
	
	private System.Nullable<int> _fk_responsible;
	
	private System.Nullable<int> _fk_priority;
	
	private System.Nullable<int> _fk_bugstatus;
	
	private System.Nullable<int> _openclosed;
	
	private EntitySet<Assignee> _Assignees;
	
	private EntitySet<Reaction> _Reactions;
	
	private EntityRef<Bugstatus> _Bugstatus;
	
	private EntityRef<Priority> _Priority;
	
	private EntityRef<Project> _Project;
	
	private EntityRef<User> _User;
	
	private EntityRef<User> _User1;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onpk_bugs_idChanging(int value);
    partial void Onpk_bugs_idChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OndateChanging(System.Nullable<System.DateTime> value);
    partial void OndateChanged();
    partial void Onfk_projectChanging(System.Nullable<int> value);
    partial void Onfk_projectChanged();
    partial void Onfk_creatorChanging(System.Nullable<int> value);
    partial void Onfk_creatorChanged();
    partial void Onfk_responsibleChanging(System.Nullable<int> value);
    partial void Onfk_responsibleChanged();
    partial void Onfk_priorityChanging(System.Nullable<int> value);
    partial void Onfk_priorityChanged();
    partial void Onfk_bugstatusChanging(System.Nullable<int> value);
    partial void Onfk_bugstatusChanged();
    partial void OnopenclosedChanging(System.Nullable<int> value);
    partial void OnopenclosedChanged();
    #endregion
	
	public Bug()
	{
		this._Assignees = new EntitySet<Assignee>(new Action<Assignee>(this.attach_Assignees), new Action<Assignee>(this.detach_Assignees));
		this._Reactions = new EntitySet<Reaction>(new Action<Reaction>(this.attach_Reactions), new Action<Reaction>(this.detach_Reactions));
		this._Bugstatus = default(EntityRef<Bugstatus>);
		this._Priority = default(EntityRef<Priority>);
		this._Project = default(EntityRef<Project>);
		this._User = default(EntityRef<User>);
		this._User1 = default(EntityRef<User>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pk_bugs_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int pk_bugs_id
	{
		get
		{
			return this._pk_bugs_id;
		}
		set
		{
			if ((this._pk_bugs_id != value))
			{
				this.Onpk_bugs_idChanging(value);
				this.SendPropertyChanging();
				this._pk_bugs_id = value;
				this.SendPropertyChanged("pk_bugs_id");
				this.Onpk_bugs_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(50)")]
	public string title
	{
		get
		{
			return this._title;
		}
		set
		{
			if ((this._title != value))
			{
				this.OntitleChanging(value);
				this.SendPropertyChanging();
				this._title = value;
				this.SendPropertyChanged("title");
				this.OntitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string description
	{
		get
		{
			return this._description;
		}
		set
		{
			if ((this._description != value))
			{
				this.OndescriptionChanging(value);
				this.SendPropertyChanging();
				this._description = value;
				this.SendPropertyChanged("description");
				this.OndescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime")]
	public System.Nullable<System.DateTime> date
	{
		get
		{
			return this._date;
		}
		set
		{
			if ((this._date != value))
			{
				this.OndateChanging(value);
				this.SendPropertyChanging();
				this._date = value;
				this.SendPropertyChanged("date");
				this.OndateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fk_project", DbType="Int")]
	public System.Nullable<int> fk_project
	{
		get
		{
			return this._fk_project;
		}
		set
		{
			if ((this._fk_project != value))
			{
				if (this._Project.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onfk_projectChanging(value);
				this.SendPropertyChanging();
				this._fk_project = value;
				this.SendPropertyChanged("fk_project");
				this.Onfk_projectChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fk_creator", DbType="Int")]
	public System.Nullable<int> fk_creator
	{
		get
		{
			return this._fk_creator;
		}
		set
		{
			if ((this._fk_creator != value))
			{
				if (this._User.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onfk_creatorChanging(value);
				this.SendPropertyChanging();
				this._fk_creator = value;
				this.SendPropertyChanged("fk_creator");
				this.Onfk_creatorChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fk_responsible", DbType="Int")]
	public System.Nullable<int> fk_responsible
	{
		get
		{
			return this._fk_responsible;
		}
		set
		{
			if ((this._fk_responsible != value))
			{
				if (this._User1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onfk_responsibleChanging(value);
				this.SendPropertyChanging();
				this._fk_responsible = value;
				this.SendPropertyChanged("fk_responsible");
				this.Onfk_responsibleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fk_priority", DbType="Int")]
	public System.Nullable<int> fk_priority
	{
		get
		{
			return this._fk_priority;
		}
		set
		{
			if ((this._fk_priority != value))
			{
				if (this._Priority.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onfk_priorityChanging(value);
				this.SendPropertyChanging();
				this._fk_priority = value;
				this.SendPropertyChanged("fk_priority");
				this.Onfk_priorityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fk_bugstatus", DbType="Int")]
	public System.Nullable<int> fk_bugstatus
	{
		get
		{
			return this._fk_bugstatus;
		}
		set
		{
			if ((this._fk_bugstatus != value))
			{
				if (this._Bugstatus.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onfk_bugstatusChanging(value);
				this.SendPropertyChanging();
				this._fk_bugstatus = value;
				this.SendPropertyChanged("fk_bugstatus");
				this.Onfk_bugstatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_openclosed", DbType="Int")]
	public System.Nullable<int> openclosed
	{
		get
		{
			return this._openclosed;
		}
		set
		{
			if ((this._openclosed != value))
			{
				this.OnopenclosedChanging(value);
				this.SendPropertyChanging();
				this._openclosed = value;
				this.SendPropertyChanged("openclosed");
				this.OnopenclosedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bug_Assignee", Storage="_Assignees", ThisKey="pk_bugs_id", OtherKey="fk_bug")]
	public EntitySet<Assignee> Assignees
	{
		get
		{
			return this._Assignees;
		}
		set
		{
			this._Assignees.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bug_Reaction", Storage="_Reactions", ThisKey="pk_bugs_id", OtherKey="fk_bug")]
	public EntitySet<Reaction> Reactions
	{
		get
		{
			return this._Reactions;
		}
		set
		{
			this._Reactions.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bugstatus_Bug", Storage="_Bugstatus", ThisKey="fk_bugstatus", OtherKey="pk_bugstatus_id", IsForeignKey=true)]
	public Bugstatus Bugstatus
	{
		get
		{
			return this._Bugstatus.Entity;
		}
		set
		{
			Bugstatus previousValue = this._Bugstatus.Entity;
			if (((previousValue != value) 
						|| (this._Bugstatus.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Bugstatus.Entity = null;
					previousValue.Bugs.Remove(this);
				}
				this._Bugstatus.Entity = value;
				if ((value != null))
				{
					value.Bugs.Add(this);
					this._fk_bugstatus = value.pk_bugstatus_id;
				}
				else
				{
					this._fk_bugstatus = default(Nullable<int>);
				}
				this.SendPropertyChanged("Bugstatus");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Priority_Bug", Storage="_Priority", ThisKey="fk_priority", OtherKey="pk_priority_id", IsForeignKey=true)]
	public Priority Priority
	{
		get
		{
			return this._Priority.Entity;
		}
		set
		{
			Priority previousValue = this._Priority.Entity;
			if (((previousValue != value) 
						|| (this._Priority.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Priority.Entity = null;
					previousValue.Bugs.Remove(this);
				}
				this._Priority.Entity = value;
				if ((value != null))
				{
					value.Bugs.Add(this);
					this._fk_priority = value.pk_priority_id;
				}
				else
				{
					this._fk_priority = default(Nullable<int>);
				}
				this.SendPropertyChanged("Priority");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_Bug", Storage="_Project", ThisKey="fk_project", OtherKey="pk_projects_id", IsForeignKey=true)]
	public Project Project
	{
		get
		{
			return this._Project.Entity;
		}
		set
		{
			Project previousValue = this._Project.Entity;
			if (((previousValue != value) 
						|| (this._Project.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Project.Entity = null;
					previousValue.Bugs.Remove(this);
				}
				this._Project.Entity = value;
				if ((value != null))
				{
					value.Bugs.Add(this);
					this._fk_project = value.pk_projects_id;
				}
				else
				{
					this._fk_project = default(Nullable<int>);
				}
				this.SendPropertyChanged("Project");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Bug", Storage="_User", ThisKey="fk_creator", OtherKey="pk_users_id", IsForeignKey=true)]
	public User User
	{
		get
		{
			return this._User.Entity;
		}
		set
		{
			User previousValue = this._User.Entity;
			if (((previousValue != value) 
						|| (this._User.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._User.Entity = null;
					previousValue.Bugs.Remove(this);
				}
				this._User.Entity = value;
				if ((value != null))
				{
					value.Bugs.Add(this);
					this._fk_creator = value.pk_users_id;
				}
				else
				{
					this._fk_creator = default(Nullable<int>);
				}
				this.SendPropertyChanged("User");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Bug1", Storage="_User1", ThisKey="fk_responsible", OtherKey="pk_users_id", IsForeignKey=true)]
	public User User1
	{
		get
		{
			return this._User1.Entity;
		}
		set
		{
			User previousValue = this._User1.Entity;
			if (((previousValue != value) 
						|| (this._User1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._User1.Entity = null;
					previousValue.Bugs1.Remove(this);
				}
				this._User1.Entity = value;
				if ((value != null))
				{
					value.Bugs1.Add(this);
					this._fk_responsible = value.pk_users_id;
				}
				else
				{
					this._fk_responsible = default(Nullable<int>);
				}
				this.SendPropertyChanged("User1");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Assignees(Assignee entity)
	{
		this.SendPropertyChanging();
		entity.Bug = this;
	}
	
	private void detach_Assignees(Assignee entity)
	{
		this.SendPropertyChanging();
		entity.Bug = null;
	}
	
	private void attach_Reactions(Reaction entity)
	{
		this.SendPropertyChanging();
		entity.Bug = this;
	}
	
	private void detach_Reactions(Reaction entity)
	{
		this.SendPropertyChanging();
		entity.Bug = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bugstatus")]
public partial class Bugstatus : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _pk_bugstatus_id;
	
	private string _bugstatus_name;
	
	private EntitySet<Bug> _Bugs;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onpk_bugstatus_idChanging(int value);
    partial void Onpk_bugstatus_idChanged();
    partial void Onbugstatus_nameChanging(string value);
    partial void Onbugstatus_nameChanged();
    #endregion
	
	public Bugstatus()
	{
		this._Bugs = new EntitySet<Bug>(new Action<Bug>(this.attach_Bugs), new Action<Bug>(this.detach_Bugs));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pk_bugstatus_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int pk_bugstatus_id
	{
		get
		{
			return this._pk_bugstatus_id;
		}
		set
		{
			if ((this._pk_bugstatus_id != value))
			{
				this.Onpk_bugstatus_idChanging(value);
				this.SendPropertyChanging();
				this._pk_bugstatus_id = value;
				this.SendPropertyChanged("pk_bugstatus_id");
				this.Onpk_bugstatus_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bugstatus_name", DbType="NVarChar(50)")]
	public string bugstatus_name
	{
		get
		{
			return this._bugstatus_name;
		}
		set
		{
			if ((this._bugstatus_name != value))
			{
				this.Onbugstatus_nameChanging(value);
				this.SendPropertyChanging();
				this._bugstatus_name = value;
				this.SendPropertyChanged("bugstatus_name");
				this.Onbugstatus_nameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bugstatus_Bug", Storage="_Bugs", ThisKey="pk_bugstatus_id", OtherKey="fk_bugstatus")]
	public EntitySet<Bug> Bugs
	{
		get
		{
			return this._Bugs;
		}
		set
		{
			this._Bugs.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Bugs(Bug entity)
	{
		this.SendPropertyChanging();
		entity.Bugstatus = this;
	}
	
	private void detach_Bugs(Bug entity)
	{
		this.SendPropertyChanging();
		entity.Bugstatus = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Priority")]
public partial class Priority : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _pk_priority_id;
	
	private string _priority_name;
	
	private EntitySet<Bug> _Bugs;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onpk_priority_idChanging(int value);
    partial void Onpk_priority_idChanged();
    partial void Onpriority_nameChanging(string value);
    partial void Onpriority_nameChanged();
    #endregion
	
	public Priority()
	{
		this._Bugs = new EntitySet<Bug>(new Action<Bug>(this.attach_Bugs), new Action<Bug>(this.detach_Bugs));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pk_priority_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int pk_priority_id
	{
		get
		{
			return this._pk_priority_id;
		}
		set
		{
			if ((this._pk_priority_id != value))
			{
				this.Onpk_priority_idChanging(value);
				this.SendPropertyChanging();
				this._pk_priority_id = value;
				this.SendPropertyChanged("pk_priority_id");
				this.Onpk_priority_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_priority_name", DbType="NVarChar(50)")]
	public string priority_name
	{
		get
		{
			return this._priority_name;
		}
		set
		{
			if ((this._priority_name != value))
			{
				this.Onpriority_nameChanging(value);
				this.SendPropertyChanging();
				this._priority_name = value;
				this.SendPropertyChanged("priority_name");
				this.Onpriority_nameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Priority_Bug", Storage="_Bugs", ThisKey="pk_priority_id", OtherKey="fk_priority")]
	public EntitySet<Bug> Bugs
	{
		get
		{
			return this._Bugs;
		}
		set
		{
			this._Bugs.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Bugs(Bug entity)
	{
		this.SendPropertyChanging();
		entity.Priority = this;
	}
	
	private void detach_Bugs(Bug entity)
	{
		this.SendPropertyChanging();
		entity.Priority = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Projects")]
public partial class Project : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _pk_projects_id;
	
	private string _title;
	
	private string _description;
	
	private EntitySet<Bug> _Bugs;
	
	private EntitySet<UsersOnProject> _UsersOnProjects;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onpk_projects_idChanging(int value);
    partial void Onpk_projects_idChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    #endregion
	
	public Project()
	{
		this._Bugs = new EntitySet<Bug>(new Action<Bug>(this.attach_Bugs), new Action<Bug>(this.detach_Bugs));
		this._UsersOnProjects = new EntitySet<UsersOnProject>(new Action<UsersOnProject>(this.attach_UsersOnProjects), new Action<UsersOnProject>(this.detach_UsersOnProjects));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pk_projects_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int pk_projects_id
	{
		get
		{
			return this._pk_projects_id;
		}
		set
		{
			if ((this._pk_projects_id != value))
			{
				this.Onpk_projects_idChanging(value);
				this.SendPropertyChanging();
				this._pk_projects_id = value;
				this.SendPropertyChanged("pk_projects_id");
				this.Onpk_projects_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(50)")]
	public string title
	{
		get
		{
			return this._title;
		}
		set
		{
			if ((this._title != value))
			{
				this.OntitleChanging(value);
				this.SendPropertyChanging();
				this._title = value;
				this.SendPropertyChanged("title");
				this.OntitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string description
	{
		get
		{
			return this._description;
		}
		set
		{
			if ((this._description != value))
			{
				this.OndescriptionChanging(value);
				this.SendPropertyChanging();
				this._description = value;
				this.SendPropertyChanged("description");
				this.OndescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_Bug", Storage="_Bugs", ThisKey="pk_projects_id", OtherKey="fk_project")]
	public EntitySet<Bug> Bugs
	{
		get
		{
			return this._Bugs;
		}
		set
		{
			this._Bugs.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_UsersOnProject", Storage="_UsersOnProjects", ThisKey="pk_projects_id", OtherKey="fk_project")]
	public EntitySet<UsersOnProject> UsersOnProjects
	{
		get
		{
			return this._UsersOnProjects;
		}
		set
		{
			this._UsersOnProjects.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Bugs(Bug entity)
	{
		this.SendPropertyChanging();
		entity.Project = this;
	}
	
	private void detach_Bugs(Bug entity)
	{
		this.SendPropertyChanging();
		entity.Project = null;
	}
	
	private void attach_UsersOnProjects(UsersOnProject entity)
	{
		this.SendPropertyChanging();
		entity.Project = this;
	}
	
	private void detach_UsersOnProjects(UsersOnProject entity)
	{
		this.SendPropertyChanging();
		entity.Project = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Reactions")]
public partial class Reaction : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _pk_reactions_id;
	
	private System.Nullable<System.DateTime> _date;
	
	private System.Nullable<int> _fk_user;
	
	private System.Nullable<int> _fk_bug;
	
	private EntityRef<Bug> _Bug;
	
	private EntityRef<User> _User;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onpk_reactions_idChanging(int value);
    partial void Onpk_reactions_idChanged();
    partial void OndateChanging(System.Nullable<System.DateTime> value);
    partial void OndateChanged();
    partial void Onfk_userChanging(System.Nullable<int> value);
    partial void Onfk_userChanged();
    partial void Onfk_bugChanging(System.Nullable<int> value);
    partial void Onfk_bugChanged();
    #endregion
	
	public Reaction()
	{
		this._Bug = default(EntityRef<Bug>);
		this._User = default(EntityRef<User>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pk_reactions_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int pk_reactions_id
	{
		get
		{
			return this._pk_reactions_id;
		}
		set
		{
			if ((this._pk_reactions_id != value))
			{
				this.Onpk_reactions_idChanging(value);
				this.SendPropertyChanging();
				this._pk_reactions_id = value;
				this.SendPropertyChanged("pk_reactions_id");
				this.Onpk_reactions_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime")]
	public System.Nullable<System.DateTime> date
	{
		get
		{
			return this._date;
		}
		set
		{
			if ((this._date != value))
			{
				this.OndateChanging(value);
				this.SendPropertyChanging();
				this._date = value;
				this.SendPropertyChanged("date");
				this.OndateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fk_user", DbType="Int")]
	public System.Nullable<int> fk_user
	{
		get
		{
			return this._fk_user;
		}
		set
		{
			if ((this._fk_user != value))
			{
				if (this._User.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onfk_userChanging(value);
				this.SendPropertyChanging();
				this._fk_user = value;
				this.SendPropertyChanged("fk_user");
				this.Onfk_userChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fk_bug", DbType="Int")]
	public System.Nullable<int> fk_bug
	{
		get
		{
			return this._fk_bug;
		}
		set
		{
			if ((this._fk_bug != value))
			{
				if (this._Bug.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onfk_bugChanging(value);
				this.SendPropertyChanging();
				this._fk_bug = value;
				this.SendPropertyChanged("fk_bug");
				this.Onfk_bugChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bug_Reaction", Storage="_Bug", ThisKey="fk_bug", OtherKey="pk_bugs_id", IsForeignKey=true)]
	public Bug Bug
	{
		get
		{
			return this._Bug.Entity;
		}
		set
		{
			Bug previousValue = this._Bug.Entity;
			if (((previousValue != value) 
						|| (this._Bug.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Bug.Entity = null;
					previousValue.Reactions.Remove(this);
				}
				this._Bug.Entity = value;
				if ((value != null))
				{
					value.Reactions.Add(this);
					this._fk_bug = value.pk_bugs_id;
				}
				else
				{
					this._fk_bug = default(Nullable<int>);
				}
				this.SendPropertyChanged("Bug");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Reaction", Storage="_User", ThisKey="fk_user", OtherKey="pk_users_id", IsForeignKey=true)]
	public User User
	{
		get
		{
			return this._User.Entity;
		}
		set
		{
			User previousValue = this._User.Entity;
			if (((previousValue != value) 
						|| (this._User.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._User.Entity = null;
					previousValue.Reactions.Remove(this);
				}
				this._User.Entity = value;
				if ((value != null))
				{
					value.Reactions.Add(this);
					this._fk_user = value.pk_users_id;
				}
				else
				{
					this._fk_user = default(Nullable<int>);
				}
				this.SendPropertyChanged("User");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _pk_users_id;
	
	private string _firstname;
	
	private string _lastname;
	
	private System.Nullable<int> _fk_usertype;
	
	private EntitySet<Assignee> _Assignees;
	
	private EntitySet<Bug> _Bugs;
	
	private EntitySet<Bug> _Bugs1;
	
	private EntitySet<Reaction> _Reactions;
	
	private EntitySet<UsersOnProject> _UsersOnProjects;
	
	private EntityRef<Usertype> _Usertype;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onpk_users_idChanging(int value);
    partial void Onpk_users_idChanged();
    partial void OnfirstnameChanging(string value);
    partial void OnfirstnameChanged();
    partial void OnlastnameChanging(string value);
    partial void OnlastnameChanged();
    partial void Onfk_usertypeChanging(System.Nullable<int> value);
    partial void Onfk_usertypeChanged();
    #endregion
	
	public User()
	{
		this._Assignees = new EntitySet<Assignee>(new Action<Assignee>(this.attach_Assignees), new Action<Assignee>(this.detach_Assignees));
		this._Bugs = new EntitySet<Bug>(new Action<Bug>(this.attach_Bugs), new Action<Bug>(this.detach_Bugs));
		this._Bugs1 = new EntitySet<Bug>(new Action<Bug>(this.attach_Bugs1), new Action<Bug>(this.detach_Bugs1));
		this._Reactions = new EntitySet<Reaction>(new Action<Reaction>(this.attach_Reactions), new Action<Reaction>(this.detach_Reactions));
		this._UsersOnProjects = new EntitySet<UsersOnProject>(new Action<UsersOnProject>(this.attach_UsersOnProjects), new Action<UsersOnProject>(this.detach_UsersOnProjects));
		this._Usertype = default(EntityRef<Usertype>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pk_users_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int pk_users_id
	{
		get
		{
			return this._pk_users_id;
		}
		set
		{
			if ((this._pk_users_id != value))
			{
				this.Onpk_users_idChanging(value);
				this.SendPropertyChanging();
				this._pk_users_id = value;
				this.SendPropertyChanged("pk_users_id");
				this.Onpk_users_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_firstname", DbType="NVarChar(50)")]
	public string firstname
	{
		get
		{
			return this._firstname;
		}
		set
		{
			if ((this._firstname != value))
			{
				this.OnfirstnameChanging(value);
				this.SendPropertyChanging();
				this._firstname = value;
				this.SendPropertyChanged("firstname");
				this.OnfirstnameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastname", DbType="NVarChar(50)")]
	public string lastname
	{
		get
		{
			return this._lastname;
		}
		set
		{
			if ((this._lastname != value))
			{
				this.OnlastnameChanging(value);
				this.SendPropertyChanging();
				this._lastname = value;
				this.SendPropertyChanged("lastname");
				this.OnlastnameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fk_usertype", DbType="Int")]
	public System.Nullable<int> fk_usertype
	{
		get
		{
			return this._fk_usertype;
		}
		set
		{
			if ((this._fk_usertype != value))
			{
				if (this._Usertype.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onfk_usertypeChanging(value);
				this.SendPropertyChanging();
				this._fk_usertype = value;
				this.SendPropertyChanged("fk_usertype");
				this.Onfk_usertypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Assignee", Storage="_Assignees", ThisKey="pk_users_id", OtherKey="fk_user")]
	public EntitySet<Assignee> Assignees
	{
		get
		{
			return this._Assignees;
		}
		set
		{
			this._Assignees.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Bug", Storage="_Bugs", ThisKey="pk_users_id", OtherKey="fk_creator")]
	public EntitySet<Bug> Bugs
	{
		get
		{
			return this._Bugs;
		}
		set
		{
			this._Bugs.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Bug1", Storage="_Bugs1", ThisKey="pk_users_id", OtherKey="fk_responsible")]
	public EntitySet<Bug> Bugs1
	{
		get
		{
			return this._Bugs1;
		}
		set
		{
			this._Bugs1.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Reaction", Storage="_Reactions", ThisKey="pk_users_id", OtherKey="fk_user")]
	public EntitySet<Reaction> Reactions
	{
		get
		{
			return this._Reactions;
		}
		set
		{
			this._Reactions.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UsersOnProject", Storage="_UsersOnProjects", ThisKey="pk_users_id", OtherKey="fk_user")]
	public EntitySet<UsersOnProject> UsersOnProjects
	{
		get
		{
			return this._UsersOnProjects;
		}
		set
		{
			this._UsersOnProjects.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usertype_User", Storage="_Usertype", ThisKey="fk_usertype", OtherKey="pk_usertype_id", IsForeignKey=true)]
	public Usertype Usertype
	{
		get
		{
			return this._Usertype.Entity;
		}
		set
		{
			Usertype previousValue = this._Usertype.Entity;
			if (((previousValue != value) 
						|| (this._Usertype.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Usertype.Entity = null;
					previousValue.Users.Remove(this);
				}
				this._Usertype.Entity = value;
				if ((value != null))
				{
					value.Users.Add(this);
					this._fk_usertype = value.pk_usertype_id;
				}
				else
				{
					this._fk_usertype = default(Nullable<int>);
				}
				this.SendPropertyChanged("Usertype");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Assignees(Assignee entity)
	{
		this.SendPropertyChanging();
		entity.User = this;
	}
	
	private void detach_Assignees(Assignee entity)
	{
		this.SendPropertyChanging();
		entity.User = null;
	}
	
	private void attach_Bugs(Bug entity)
	{
		this.SendPropertyChanging();
		entity.User = this;
	}
	
	private void detach_Bugs(Bug entity)
	{
		this.SendPropertyChanging();
		entity.User = null;
	}
	
	private void attach_Bugs1(Bug entity)
	{
		this.SendPropertyChanging();
		entity.User1 = this;
	}
	
	private void detach_Bugs1(Bug entity)
	{
		this.SendPropertyChanging();
		entity.User1 = null;
	}
	
	private void attach_Reactions(Reaction entity)
	{
		this.SendPropertyChanging();
		entity.User = this;
	}
	
	private void detach_Reactions(Reaction entity)
	{
		this.SendPropertyChanging();
		entity.User = null;
	}
	
	private void attach_UsersOnProjects(UsersOnProject entity)
	{
		this.SendPropertyChanging();
		entity.User = this;
	}
	
	private void detach_UsersOnProjects(UsersOnProject entity)
	{
		this.SendPropertyChanging();
		entity.User = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UsersOnProjects")]
public partial class UsersOnProject : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _pk_UsersOnProjects;
	
	private System.Nullable<int> _fk_user;
	
	private System.Nullable<int> _fk_project;
	
	private EntityRef<Project> _Project;
	
	private EntityRef<User> _User;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onpk_UsersOnProjectsChanging(int value);
    partial void Onpk_UsersOnProjectsChanged();
    partial void Onfk_userChanging(System.Nullable<int> value);
    partial void Onfk_userChanged();
    partial void Onfk_projectChanging(System.Nullable<int> value);
    partial void Onfk_projectChanged();
    #endregion
	
	public UsersOnProject()
	{
		this._Project = default(EntityRef<Project>);
		this._User = default(EntityRef<User>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pk_UsersOnProjects", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int pk_UsersOnProjects
	{
		get
		{
			return this._pk_UsersOnProjects;
		}
		set
		{
			if ((this._pk_UsersOnProjects != value))
			{
				this.Onpk_UsersOnProjectsChanging(value);
				this.SendPropertyChanging();
				this._pk_UsersOnProjects = value;
				this.SendPropertyChanged("pk_UsersOnProjects");
				this.Onpk_UsersOnProjectsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fk_user", DbType="Int")]
	public System.Nullable<int> fk_user
	{
		get
		{
			return this._fk_user;
		}
		set
		{
			if ((this._fk_user != value))
			{
				if (this._User.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onfk_userChanging(value);
				this.SendPropertyChanging();
				this._fk_user = value;
				this.SendPropertyChanged("fk_user");
				this.Onfk_userChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fk_project", DbType="Int")]
	public System.Nullable<int> fk_project
	{
		get
		{
			return this._fk_project;
		}
		set
		{
			if ((this._fk_project != value))
			{
				if (this._Project.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onfk_projectChanging(value);
				this.SendPropertyChanging();
				this._fk_project = value;
				this.SendPropertyChanged("fk_project");
				this.Onfk_projectChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_UsersOnProject", Storage="_Project", ThisKey="fk_project", OtherKey="pk_projects_id", IsForeignKey=true)]
	public Project Project
	{
		get
		{
			return this._Project.Entity;
		}
		set
		{
			Project previousValue = this._Project.Entity;
			if (((previousValue != value) 
						|| (this._Project.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Project.Entity = null;
					previousValue.UsersOnProjects.Remove(this);
				}
				this._Project.Entity = value;
				if ((value != null))
				{
					value.UsersOnProjects.Add(this);
					this._fk_project = value.pk_projects_id;
				}
				else
				{
					this._fk_project = default(Nullable<int>);
				}
				this.SendPropertyChanged("Project");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UsersOnProject", Storage="_User", ThisKey="fk_user", OtherKey="pk_users_id", IsForeignKey=true)]
	public User User
	{
		get
		{
			return this._User.Entity;
		}
		set
		{
			User previousValue = this._User.Entity;
			if (((previousValue != value) 
						|| (this._User.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._User.Entity = null;
					previousValue.UsersOnProjects.Remove(this);
				}
				this._User.Entity = value;
				if ((value != null))
				{
					value.UsersOnProjects.Add(this);
					this._fk_user = value.pk_users_id;
				}
				else
				{
					this._fk_user = default(Nullable<int>);
				}
				this.SendPropertyChanged("User");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
